import {useState} from 'react';
import {ethers} from 'ethers';
//import logo from './logo.svg';
import Greeter from './artifacts/contracts/Greeter.sol/Greeter.json'
import Token from './artifacts/contracts/Token.sol/Token.json'

import './App.css';


const greeterAddress = "0x5FbDB2315678afecb367f032d93F642f64180aa3"
const tokenAddress = "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318"


function App() {
  const [greeting, setGreetingValue] = useState('');
  const [userAccount, setUserAccount] = useState('');
  const [amount, setAmount] = useState(0);


async function requestAccount(){
  await window.ethereum.request({method: 'eth_requestAccounts'});
}

async function getBalance(){
  if (typeof window.ethereum !== 'undefined'){
    const [account] = await window.ethereum.request({method: 'eth_requestAccounts'});
    const provider = new ethers.providers.Web3Provider(window.ethereum);
    const contract = new ethers.Contract(tokenAddress, Token.abi, provider);
    const balance = await contract.balanceOf(account);
    console.log("Balance: ", balance.toString());
  }
}

async function sendCoins(){
  if (typeof window.ethereum !== 'undefined'){
    await requestAccount()
    const provider = new ethers.providers.Web3Provider(window.ethereum);
    const signer = provider.getSigner();
    const contract = new ethers.Contract(tokenAddress, Token.abi, signer);
    const transaction = await new contract.transfer(userAccount, amount);
    await transaction.wait();
    console.log(`${amount} tokens successfully sent to ${userAccount}`);
  }
}

async function fetchGreeting(){
  if(typeof window.ethereum !== 'underfined'){
    const provider = new ethers.providers.Web3Provider(window.ethereum)
    const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider)
    try{
      const data = await contract.greet()
      console.log('data: ', data )
    } catch(err){
      console.log("Error: ", err)
    }
  }
}

async function setGreeting(){
  if (!greeting) return
  if(typeof window.ethereum !== 'underfined'){
    await requestAccount()
    const provider = new ethers.providers.Web3Provider(window.ethereum)
    const signer = provider.getSigner()
    const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer)
    const transaction = await contract.setGreeting(greeting)
    setGreetingValue("")
    await transaction.wait()
    fetchGreeting()
  }
}

  return (
    <div className="App">
      <header className="App-header">
        <button onClick = {fetchGreeting}> Fetch Greeting </button>
        <input onChange = {e => setGreetingValue(e.target.value)}
        placeholder = 'Set Greeting' value = {greeting}/>
        <button onClick = {setGreeting}> Set Greeting </button>

        <br />
        <button onClick = {getBalance}> Get Balance </button>
        <input onChange = {e => setUserAccount(e.target.value)} placeholder = "Account ID" />
        <input onChange = {e => setAmount(e.target.value)} placeholder ="Amount" />
        <button onClick = {sendCoins}> Send Coins </button>

      </header>
    </div>
  );
}

export default App;
